[{"id":0,"href":"/zh/docs/getting-started/","title":"基础部分","section":"Docs","content":" Introduction # Ferre hinnitibus erat accipitrem dixi Troiae tollens # Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret Est simul fameque tauri qua ad # Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol # Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo; Trepident sitimque # Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":1,"href":"/zh/docs/getting-started/basic-info-and-server-preparation/","title":"一、基本信息和服务器准备","section":"基础部分","content":" 一、基本信息和服务器准备 # 这部分记录了服务器准备信息。\n基本信息 # 需要的准备内容：\n3 台能上网的 Linux 服务器，这次我用的是 Rocky Linux 8 3 个同网段的 IP，挂在这 3 台服务器上 计划表如下：\n角色 IP 要在上面安装的组件 master 192.168.56.10 etcdkube-apiserver kube-controller-managerkube-scheduler node01 192.168.56.11 containerdkubelet kube-proxy node02 192.168.56.12 containerdkubelet kube-proxy [!NOTE]\n项目中包含了一个给 Virtualbox 用的 Vagrantfile，用来快速启动 3 个服务器，知道怎么用的话可以用那个\n服务器准备 # 设置这 3 台服务器的 hostname\nhostnamectl set-hostname (master|node01|node01) 把这三个 hostname 都写在 /etc/hosts 里面\n192.168.56.10 master 192.168.56.11 node01 192.168.56.12 node02 设置好时间和时区（根据自己的实际情况进行设置）\ntimedatectl set-timezone \u0026lt;你的时区\u0026gt; 在 3 台服务器上安装一些基础工具\ndnf install wget vim master 节点还要安装 OpenSSL，一会儿我们在这台机器上创建证书\ndnf install openssl node 节点还要安装一些后面要用到的工具\ndnf install socat conntrack ipset 关闭 swap 和 selinux\nvim /etc/fstab vim /etc/selinux/config 允许 ip_forward（这样的话 Node 节点才知道要把数据包转发给 Pod）\n编辑 /etc/sysctl.conf，添加下面这句话\nnet.ipv4.ip_forward = 1 保存，然后执行 sysctl -p 让我们的设置生效。\n创建 K8s 各个组件的配置文件夹，我们后面还要创建其他文件夹\nmkdir /etc/kubernetes # 这里放配置 mkdir /etc/kubernetes/pki # 这里放证书 有关网络的特别说明 # 执行 ip addr 后，\n如果你的机器上只显示 lo 和 eth0，那么在本次配置中，你的主网卡就是 eth0。\n如果你使用了 VirtualBox，可能会有一个 NAT 网络和一个 Host-only 网络：NAT 网络用于联网下载资源，Host-only 网络用于虚拟机之间的互联。在这种情况下，主网卡是 Host-only 的那个网卡，K8s 各 Node 之间的通信会通过这张网卡进行。\n建议在每台服务器上相互 ping 一下，确保节点间可以互通。\n接下来准备 K8s 的证书。\n"},{"id":2,"href":"/zh/docs/getting-started/certificates-and-keys/","title":"二、K8s 的证书和 Key","section":"基础部分","content":" 二、K8s 的证书 # K8s 各个组件之间的交互都是通过 HTTPS 实现的：controller 访问 apiserver、kubelet 访问 apiserver，甚至我们使用 kubectl 工具操作时，都是通过 HTTPS 连接到 apiserver。\n这与我们通过浏览器访问网站时使用的 HTTPS 类似，但 K8s 采用双向认证。不仅服务端需要证书和密钥，客户端也要准备自己的证书和密钥来证明身份。\n为了简化，接下来我们只准备几个证书，能共享的组件就共用这些证书。\n证书 用到这个证书的组件 文件 角色 CA 所有 ca-key.pem（Key）ca.pem（证书） 根证书 API Server 证书 kube-apiserver apiserver-key.pem（Key）apiserver.pem（证书） API Server 的服务端证书 Client 证书 各种组件都会用 client-key.pem（Key）client.pem（证书） 用来访问 API Server 的客户端证书 Service Account 证书 kube-apiserver sa-key.pem（私钥）sa-pub.pem（公钥） Service Account JWT Token 的签发证书 [!NOTE]\nService Account 证书是一对公私钥，和前面说到的 HTTPS 双向认证证书说的不是一个东西。这个后面会再提到。\nService Account 证书是一对公私钥，和前面说到的 HTTPS 双向认证证书说的不是一个东西。这个后面会再提到。\n工具准备 # 这个部分我们用 Cloudflare 的 SSL 工具 cfssl。\n下载地址在这里：https://github.com/cloudflare/cfssl/releases/\n我们主要用到里面的 cfssl 和 cfssljson 这两个二进制。\nwget https://github.com/cloudflare/cfssl/releases/download/v1.6.5/cfssl_1.6.5_linux_amd64 wget https://github.com/cloudflare/cfssl/releases/download/v1.6.5/cfssljson_1.6.5_linux_amd64 mv cfssl_1.6.5_linux_amd64 /usr/local/bin/cfssl mv cfssljson_1.6.5_linux_amd64 /usr/local/bin/cfssljson chmod +x /usr/local/bin/cfssl chmod +x /usr/local/bin/cfssljson 我们趁这个机会把 /usr/local/bin 放在 PATH 里，后面其他的 bin 也都会放在这里。\necho \u0026#34;export PATH=$PATH:/usr/local/bin\u0026#34; \u0026gt;\u0026gt; ~/.bash_profile source ~/.bash_profile 你可能听说 OpenSSL 也能生成证书的工具。那个用起来有一些难受，所以我们在创建证书的时候就不用那个了，创建 Key 的时候会简单用用。\n生成 CA 证书 # 证书是一个树状的结构，CA 证书是这个树状结构的根，K8s 其他证书的生成过程中都要带上 CA 的证书，仿佛是声明了一种父子关系：其他证书都是这张根证书的“儿子”，他们有一个共同的“父亲”。\n我们先来生成 CA 这个“父亲”。\ncd /etc/kubernetes/pki/ 创建 ca-csr.json 文件，写下面的内容。\n{ \u0026#34;CN\u0026#34;: \u0026#34;IKFB\u0026#34;, \u0026#34;key\u0026#34;: { \u0026#34;algo\u0026#34;: \u0026#34;rsa\u0026#34;, \u0026#34;size\u0026#34;: 2048 }, \u0026#34;names\u0026#34;: [ { \u0026#34;C\u0026#34;: \u0026#34;US\u0026#34;, \u0026#34;L\u0026#34;: \u0026#34;San Francisco\u0026#34;, \u0026#34;O\u0026#34;: \u0026#34;Kubernetes\u0026#34;, \u0026#34;OU\u0026#34;: \u0026#34;CA\u0026#34;, \u0026#34;ST\u0026#34;: \u0026#34;California\u0026#34; } ] } 然后用 cfssl 工具生成 ca-key.pem 密钥和 ca.pem 证书。\ncfssl genkey -initca ca-csr.json | cfssljson -bare ca 生成 API Server 的证书 # 接下来我们要生成 API Server 的证书，这个证书类似于常见的 HTTPS 证书，主要用于在服务端证明它确实是 API Server。\n需要注意的是，客户端访问 API Server 的地址可能不同：有的通过 Service IP（10.96.0.1），有的使用 https://master:6443 ，或者直接通过 IP 地址（192.168.56.10）。因此，证书必须涵盖这些不同的访问地址。在签发证书时，我们需要将这些地址信息一并包含，就像给 API Server 发一张‘身份证’，上面列出了它的多个合法名称。\n在证书技术中，指定多个地址的方式叫做 Subject Alternative Names (SANs)，我们稍后会在证书的配置文件中添加这些 SAN 信息。\n复制下面的内容到 kube-apiserver-csr.json。\n{ \u0026#34;CN\u0026#34;: \u0026#34;kube-apiserver\u0026#34;, \u0026#34;hosts\u0026#34;: [ \u0026#34;kubernetes\u0026#34;, \u0026#34;kubernetes.default\u0026#34;, \u0026#34;kubernetes.default.svc\u0026#34;, \u0026#34;kubernetes.default.svc.cluster.local\u0026#34;, \u0026#34;master\u0026#34;, \u0026#34;10.96.0.1\u0026#34;, \u0026#34;192.168.56.10\u0026#34; ], \u0026#34;key\u0026#34;: { \u0026#34;algo\u0026#34;: \u0026#34;rsa\u0026#34;, \u0026#34;size\u0026#34;: 2048 }, \u0026#34;names\u0026#34;: [ { \u0026#34;C\u0026#34;: \u0026#34;US\u0026#34;, \u0026#34;L\u0026#34;: \u0026#34;San Francisco\u0026#34;, \u0026#34;O\u0026#34;: \u0026#34;Kubernetes\u0026#34;, \u0026#34;OU\u0026#34;: \u0026#34;CA\u0026#34;, \u0026#34;ST\u0026#34;: \u0026#34;California\u0026#34; } ] } 然后我们生成 API Server 的证书和 Key。\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -profile=kube-apiserver kube-apiserver-csr.json | cfssljson -bare kube-apiserver 这样就得到了 kube-apiserver-key.pem 和 kube-apiserver.pem。\n生成 Client 证书 # 接下来我们生成一张 Client 证书，供访问 API Server 的组件使用。\n这次安装的 K8s 通过证书认证身份。我们创建的证书相当于 K8s 的‘超级管理员’身份。\n这个证书会配置到 controller、scheduler 和 kubelet 的 kubeconfig 中，用于访问 API Server。\n[!NOTE] 其实这些组件应该各自生成专属的证书和 Kubeconfig，但为了简化流程，这里统一使用一张证书。\n请勿在生产环境中这样操作。\n首先创建 client-csr.json。\n{ \u0026#34;CN\u0026#34;: \u0026#34;admin\u0026#34;, \u0026#34;key\u0026#34;: { \u0026#34;algo\u0026#34;: \u0026#34;rsa\u0026#34;, \u0026#34;size\u0026#34;: 2048 }, \u0026#34;names\u0026#34;: [ { \u0026#34;O\u0026#34;: \u0026#34;system:masters\u0026#34; } ] } 然后执行创建证书的命令。\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem client-csr.json | cfssljson -bare client 这样就获得了 client-key.pem 和 client.pem。\n命令执行后，你可能会看到提示‘[WARNING] This certificate lacks a \u0026ldquo;hosts\u0026rdquo; field\u0026hellip;’，意思是因为没有指定 hosts，这个证书不适合用来标识服务器身份。但我们并不打算将它作为服务端证书使用，所以可以忽略这个警告。\n我们指定了 CN=admin,O=system:masters，相当于声明这个用户叫 admin，属于 system:masters 组。这对应 K8s 的一个预设规则：属于 system:masters 组的用户都是超级管理员。\n生成 Service Account 公私钥 # 和前面的证书 / Key 不同，Service Account 证书是一对公私钥。\n有时候 Pod 也要和 Kubernetes 的 API 交互，因此在 Pod 创建的时候，Kubernetes 会为每个 Pod 创建一个 JWT Token 做为交互凭证，这个 Service Account 的公私钥就是用来生成和验证 JWT Token 的。\n这个比较简单，我们直接用 OpenSSL 生成。\n生成私钥和公钥\n# 生成私钥 openssl genrsa -out sa-key.pem 2048 # 用私钥生成公钥 openssl rsa -in sa-key.pem -pubout -out sa-pub.pem 到这里为止，如果证书文件夹包含了下面这些文件，那基本说明这步安装完成。\n[root@master pki]# ls -alh total 60K drwxr-xr-x. 2 root root 4.0K Oct 13 13:51 . drwxr-xr-x. 3 root root 17 Oct 13 13:38 .. -rw-r--r--. 1 root root 1009 Oct 13 13:48 ca.csr -rw-r--r--. 1 root root 214 Oct 13 13:48 ca-csr.json -rw-------. 1 root root 1.7K Oct 13 13:48 ca-key.pem -rw-r--r--. 1 root root 1.3K Oct 13 13:48 ca.pem -rw-r--r--. 1 root root 920 Oct 13 13:51 client.csr -rw-r--r--. 1 root root 130 Oct 13 13:51 client-csr.json -rw-------. 1 root root 1.7K Oct 13 13:51 client-key.pem -rw-r--r--. 1 root root 1.3K Oct 13 13:51 client.pem -rw-r--r--. 1 root root 1.2K Oct 13 13:50 kube-apiserver.csr -rw-r--r--. 1 root root 411 Oct 13 13:49 kube-apiserver-csr.json -rw-------. 1 root root 1.7K Oct 13 13:50 kube-apiserver-key.pem -rw-r--r--. 1 root root 1.6K Oct 13 13:50 kube-apiserver.pem -rw-------. 1 root root 1.7K Oct 13 13:51 sa-key.pem -rw-r--r--. 1 root root 451 Oct 13 13:51 sa-pub.pem 接下来开始安装 Master 节点。\n"},{"id":3,"href":"/zh/docs/advanced/buttons/","title":"Buttons","section":"进阶部分","content":" Buttons # Buttons are styled links that can lead to local page or external link.\nExample # {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}} Get Home Contribute "},{"id":4,"href":"/zh/docs/advanced/columns/","title":"Columns","section":"进阶部分","content":" Columns # Columns help organize shorter pieces of content horizontally for readability.\nExample # {{% columns [ratio=\u0026#34;1:1\u0026#34;] [class=\u0026#34;...\u0026#34;] %}} \u0026lt;!-- begin columns block --\u0026gt; # Left Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Mid Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Right Content Lorem markdownum insigne... {{% /columns %}} Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nMid Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!\nRight Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nSettings size ratio for columns # {{% columns ratio=\u0026#34;1:2\u0026#34; %}} \u0026lt;!-- begin columns block --\u0026gt; ## x1 Column Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; ## x2 Column Lorem markdownum insigne... {{% /columns %}} x1 Column # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nx2 Column # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n"},{"id":5,"href":"/zh/docs/advanced/details/","title":"Details","section":"进阶部分","content":" Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.\nExample # {{% details \u0026#34;Title\u0026#34; [open] %}} ## Markdown content Lorem markdownum insigne... {{% /details %}} {{% details title=\u0026#34;Title\u0026#34; open=true %}} ## Markdown content Lorem markdownum insigne... {{% /details %}} Title Markdown content # Lorem markdownum insigne\u0026hellip;\n"},{"id":6,"href":"/zh/docs/advanced/hints/","title":"Hints","section":"进阶部分","content":" Hints # Hint shortcode can be used as hint/alerts/notification block.\nThere are 3 colors to choose: info, warning and danger.\n{{% hint [info|warning|danger] %}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{% /hint %}} Example # Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa\nMarkdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa\nMarkdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa\n"},{"id":7,"href":"/zh/docs/advanced/mermaid/","title":"Mermaid","section":"进阶部分","content":" Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.\nOverride Mermaid initialization config\nTo override the initialization config for Mermaid, create a mermaid.json file in your assets folder!\nExample # {{\u0026lt; mermaid [class=\u0026#34;...\u0026#34;] \u0026gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u0026gt; State2 note left of State2 : This is the note to the left. {{\u0026lt; /mermaid \u0026gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u003e State2 note left of State2 : This is the note to the left. "},{"id":8,"href":"/zh/docs/advanced/section/","title":"Section","section":"进阶部分","content":" Section # Section renders pages in section as definition list, using title and description. Optional param summary can be used to show or hide page summary\nExample # {{\u0026lt; section [summary] \u0026gt;}} First Page First page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSecond Page Second Page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":9,"href":"/zh/docs/advanced/section/first-page/","title":"First Page","section":"Section","content":" First page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":10,"href":"/zh/docs/advanced/section/second-page/","title":"Second Page","section":"Section","content":" Second Page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":11,"href":"/zh/docs/advanced/tabs/","title":"Tabs","section":"进阶部分","content":" Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.\n{{% tabs %}} {{% tab \u0026#34;MacOS\u0026#34; %}} # MacOS Content {{% /tab %}} {{% tab \u0026#34;Linux\u0026#34; %}} # Linux Content {{% /tab %}} {{% tab \u0026#34;Windows\u0026#34; %}} # Windows Content {{% /tab %}} {{% /tabs %}} Example # MacOS MacOS # This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nLinux Linux # This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nWindows Windows # This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n"},{"id":12,"href":"/zh/docs/getting-started/hidden/","title":"Hidden","section":"基础部分","content":" This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\nPater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer), pad.property_data_programming.sectorBrowserPpga(dataMask, 37, recycleRup)); intellectualVaporwareUser += -5 * 4; traceroute_key_upnp /= lag_optical(android.smb(thyristorTftp)); surge_host_golden = mca_compact_device(dual_dpi_opengl, 33, commerce_add_ppc); if (lun_ipv) { verticalExtranet(1, thumbnail_ttl, 3); bar_graphics_jpeg(chipset - sector_xmp_beta); } Fronde cetera dextrae sequens pennis voce muneris # Acta cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software; if (internic \u0026gt; disk) { emoticonLockCron += 37 + bps - 4; wan_ansi_honeypot.cardGigaflops = artificialStorageCgi; simplex -= downloadAccess; } var volumeHardeningAndroid = pixel + tftp + onProcessorUnmount; sector(memory(firewire + interlaced, wired)); "},{"id":13,"href":"/zh/docs/advanced/katex/","title":"KaTeX","section":"进阶部分","content":" KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX\nExample # {{\u0026lt; katex display=true \u0026gt;}} f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi {{\u0026lt; /katex \u0026gt;}} \\[ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi \\] Display Mode Example # Here is some inline example: \\(\\pi(x)\\) , rendered in the same line. And below is display example, having display: block \\[ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi \\] Text continues here.\n"}]